name: A - Test Conditions

on:
  workflow_dispatch:
    inputs:
      runTests:
        description: 'Run the tests.'
        type: boolean
        default: true
      deployToMaven:
        description: 'Deploy to Maven Central (using Sonatype OSSRH)'
        type: boolean
        default: false
      gitReleaseTag:
        description: 'Release tag to upload to. Must start with "release-"'
        type: string

env:
  RELEASE_FOLDER: '${{ github.workspace }}/releaseDist'

jobs:
  build:

    runs-on: ubuntu-latest
    environment: release-env

    permissions:
      contents: write # So that we can upload to release
      # packages: write # So that we can store the binaries of this build for a while

    steps:

    - name: Checkout repo files
      uses: actions/checkout@v4.1.7
      with:
        lfs: true

    - name: Show input
      run: |
        mkdir -p ${RELEASE_FOLDER}
        echo "=============================="
        echo -e "\e[1;93mRUN_TESTS           :\e[m $RUN_TESTS"
        echo "DEPLOY_TO_MAVEN     : $DEPLOY_TO_MAVEN"
        echo "GIT_RELEASE_TAG     : $GIT_RELEASE_TAG"
        echo "env.RUN_TESTS       : ${{ env.RUN_TESTS }}"
        echo "env.DEPLOY_TO_MAVEN : ${{ env.DEPLOY_TO_MAVEN }}"
        echo "env.GIT_RELEASE_TAG : ${{ env.GIT_RELEASE_TAG }}"
        echo "input runTests      : ${{ inputs.runTests }}"
        echo "input deployToMaven : ${{ inputs.deployToMaven }}"
        echo "input gitReleaseTag : ${{ inputs.gitReleaseTag }}"
        echo "GITHUB_SHA      : ${GITHUB_SHA}"
        echo "GITHUB_REF      : ${GITHUB_REF}"
        echo "GITHUB_REF_NAME : ${GITHUB_REF_NAME}"
        echo "=============================="
        echo The current folder is $PWD
      env:
        RUN_TESTS: ${{ inputs.runTests }}
        GIT_RELEASE_TAG: ${{ inputs.gitReleaseTag }}

    - name: Running tests, step condition
      if: ${{ inputs.runTests }}
      run: echo Running TESTS

    - name: Running tests, bash condition
      run: |
        if [ "${{ inputs.runTests }}" == "true" ]; then
          echo RUNNING TESTS
        else
          echo SKIPPING RUNNING TESTS
        fi

    - name: Build release files
      run: |
        set > ${RELEASE_FOLDER}/environ.txt

    - name: Collect artifacts in one folder
      run: |
        echo Collect artifacts > ${RELEASE_FOLDER}/collect2.txt

    - name: Dump GitHub context
      run: |
        echo "$GITHUB_CONTEXT"    > ${RELEASE_FOLDER}/GITHUB_CONTEXT.json
        echo "$JOB_CONTEXT"       > ${RELEASE_FOLDER}/JOB_CONTEXT.json
        echo "$STEPS_CONTEXT"     > ${RELEASE_FOLDER}/STEPS_CONTEXT.json
        echo "$RUNNER_CONTEXT"    > ${RELEASE_FOLDER}/RUNNER_CONTEXT.json
        echo "$STRATEGY_CONTEXT"  > ${RELEASE_FOLDER}/STRATEGY_CONTEXT.json
        echo "$MATRIX_CONTEXT"    > ${RELEASE_FOLDER}/MATRIX_CONTEXT.json
        echo "$INPUTS_CONTEXT"    > ${RELEASE_FOLDER}/INPUTS_CONTEXT.json
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
        JOB_CONTEXT: ${{ toJson(job) }}
        STEPS_CONTEXT: ${{ toJson(steps) }}
        RUNNER_CONTEXT: ${{ toJson(runner) }}
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
        INPUTS_CONTEXT: ${{ toJson(inputs) }}

    - name: Publish to maven
      run: |
        if [ "${{ inputs.deployToMaven }}" != "true" ]; then
          # Run the deploy, but do it to a local folder, not to Sonatype / Maven Central
          export MAVEN_LOCAL='-Durl=this_is_local'
        fi
        echo mvn deploy $MAVEN_LOCAL -DrunTests -DskipITs

    - name: Upload build results
      # if: false # Temporarily disabled
      uses: actions/upload-artifact@v4.3.6
      with:
        name: test-binaries
        path: ${{ env.RELEASE_FOLDER }}
        retention-days: 1 # TBD if we want to keep them longer
        overwrite: true

    - name: Upload to release
      if: ${{ inputs.gitReleaseTag && startsWith(inputs.gitReleaseTag, 'release-') }}
      run: |
        gh release upload ${{ inputs.gitReleaseTag }} LICENSE --clobber --repo=${{ github.repository }}
        gh release upload ${{ inputs.gitReleaseTag }} ${RELEASE_FOLDER}/* --clobber --repo=${{ github.repository }}
      env:
        GH_TOKEN: ${{ github.token }}
