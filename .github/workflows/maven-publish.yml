# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Publish to Nexus Sonatype OSS

on:
  push:
    branches:
      - main
  release:
    types: [created]
  workflow_dispatch:
    # To trigger the Env Test workflow manually, follow the instructions in
    # https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow

env:
  SHARED_MVN_ARGS: '--show-version --no-transfer-progress'

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repo files
      uses: actions/checkout@v4
      with:
        lfs: true
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '8' # The custom Taglets for javadoc (tools/build) are still Java 8. They need updating.
        distribution: 'temurin'
        server-id: maven # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Dump environment info
      run: |
        echo PWD=$PWD
        echo '========================'
        ls .
        echo '========================'
        ls /
        echo '========================'
        echo GITHUB_WORKSPACE = $GITHUB_WORKSPACE
        echo '========================'
        ls $GITHUB_WORKSPACE
        echo '========================'
        cat $GITHUB_WORKSPACE/settings.xml
        echo '========================'
        env
        echo '========================'

    - name: Build with Maven
      run: |
        cd icu4j
        mvn ${SHARED_MVN_ARGS} -B clean install \
          -DskipTests -DskipITs \
          -P with_sources,with_javadoc

    - name: Publish to GitHub Packages Apache Maven
      run: |
        cd icu4j
        mvn deploy -s $GITHUB_WORKSPACE/settings.xml \
          -DskipTests -DskipITs \
          -P with_sources,with_javadoc
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
